<!DOCTYPE html>
<html xmlns:fb="http://ogp.me/ns/fb#" lang="es">
  <head>
    <meta charset="utf-8" />
    <title><%= app.name %></title>

    <link rel="stylesheet" href="/stylesheets/screen.css" media="Screen" type="text/css" />
    <link rel="stylesheet" href="/stylesheets/mobile.css" media="handheld, only screen and (max-width: 480px), only screen and (max-device-width: 480px)" type="text/css" />
    <link rel="stylesheet" type="text/css" href="/fancybox/jquery.fancybox.css?v=2.1.5" media="screen" />
    
    <!--[if IEMobile]>
    <link rel="stylesheet" href="mobile.css" media="screen" type="text/css"  />
    <![endif]-->

    <meta property="og:title" content="<%= app.name %>" />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="<%= url('/images/75x75.jpg') %>" />
    <meta property="og:site_name" content="<%= app.name %>" />
    <meta property="fb:app_id" content="<%= app.id %>" />
    
    <script type="text/javascript" src="/scripts/jquery.min.js"></script>
    <script type="text/javascript" src="/fancybox/jquery.fancybox.js?v=2.1.5"></script>
    
    <!--[if IE]>
      <script type="text/javascript">
        var tags = ['footer', 'section'];
        while(tags.length)
          document.createElement(tags.pop());
      </script>
    <![endif]-->

  </head>
  <body>
    <div id="fb-root"></div>
    <script>
      var shareUrl = '<%= app.shareUrl %>';
      
      window.fbAsyncInit = function() {
        // init the FB JS SDK
        FB.init({
          appId      : '<%= app.id %>', // App ID
          channelUrl : '<%= url_no_scheme('/channel.html') %>', // Channel File
          status     : true, // check login status
          cookie     : true, // enable cookies to allow the server to access the session
          xfbml      : true  // parse XFBML
        });

        // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
        // for any authentication related change, such as login, logout or session refresh. This means that
        // whenever someone who was previously logged out tries to log in again, the correct case below 
        // will be handled. 
        FB.Event.subscribe('auth.authResponseChange', function(response) {
          // Here we specify what we do with the response anytime this event occurs. 
          if (response.status === 'connected') {
            // The response object is returned with a status field that lets the app know the current
            // login status of the person. In this case, we're handling the situation where they 
            // have logged in to the app.
            //testAPI();
            // refresh for passing user_id in signed_request
            <% if (!userId) { %>
              window.location.replace(window.location.href);
            <% } %>
          } else if (response.status === 'not_authorized') {
            // In this case, the person is logged into Facebook, but not into the app, so we call
            // FB.login() to prompt them to do so. 
            // In real-life usage, you wouldn't want to immediately prompt someone to login 
            // like this, for two reasons:
            // (1) JavaScript created popup windows are blocked by most browsers unless they 
            // result from direct interaction from people using the app (such as a mouse click)
            // (2) it is a bad experience to be continually prompted to login upon page load.
            FB.login();
          } else {
            // In this case, the person is not logged into Facebook, so we call the login() 
            // function to prompt them to do so. Note that at this stage there is no indication
            // of whether they are logged into the app. If they aren't then they'll see the Login
            // dialog right after they log in to Facebook. 
            // The same caveats as above apply to the FB.login() call here.
            FB.login();
          }
        });

        // Additional initialization code such as adding Event Listeners goes here
        FB.Canvas.setAutoGrow();


        <% if (!userId) { %>
        FB.login();
        <% } %>
      };

      // Load the SDK asynchronously
      (function(d, s, id){
         var js, fjs = d.getElementsByTagName(s)[0];
         if (d.getElementById(id)) {return;}
         js = d.createElement(s); js.id = id;
         js.src = "//connect.facebook.net/es_LA/all.js";
         fjs.parentNode.insertBefore(js, fjs);
       }(document, 'script', 'facebook-jssdk'));

      // Here we run a very simple test of the Graph API after login is successful. 
      // This testAPI() function is only called in those cases. 
      function testAPI() {
        console.log('Welcome!  Fetching your information.... ');
        FB.api('/me', function(response) {
          console.log('Good to see you, ' + response.name + '.');
        });
      }
    </script>
    <div class="container">
      <% if (liked) { %>
        <%- include liked.ejs %>
      <% } else { %>
        <%- include notliked.ejs %>
      <% } %>
    </div>
  </body>
</html>

